diff --git a/net/aws/src/s3sink/imp.rs b/net/aws/src/s3sink/imp.rs
index 3cbe5681..5d88c61d 100644
--- a/net/aws/src/s3sink/imp.rs
+++ b/net/aws/src/s3sink/imp.rs
@@ -662,6 +662,11 @@ impl ObjectImpl for S3Sink {
                     .blurb("The key of the file to write")
                     .mutable_ready()
                     .build(),
+                glib::ParamSpecString::builder("location")
+                    .nick("S3 Location")
+                    .blurb("The key of the file to write")
+                    .mutable_ready()
+                    .build(),
                 glib::ParamSpecString::builder("region")
                     .nick("AWS Region")
                     .blurb("An AWS region (e.g. eu-west-2).")
@@ -787,7 +792,7 @@ impl ObjectImpl for S3Sink {
                     let _ = self.set_uri(Some(&settings.to_uri()));
                 }
             }
-            "key" => {
+            "key" | "location" => {
                 settings.key = value
                     .get::<Option<String>>()
                     .expect("type checked upstream");
@@ -882,7 +887,7 @@ impl ObjectImpl for S3Sink {
         let settings = self.settings.lock().unwrap();
 
         match pspec.name() {
-            "key" => settings.key.to_value(),
+            "key" | "location" => settings.key.to_value(),
             "bucket" => settings.bucket.to_value(),
             "region" => settings.region.to_string().to_value(),
             "part-size" => settings.buffer_size.to_value(),
diff --git a/net/aws/src/s3src/imp.rs b/net/aws/src/s3src/imp.rs
index 002bd612..651c0af7 100644
--- a/net/aws/src/s3src/imp.rs
+++ b/net/aws/src/s3src/imp.rs
@@ -159,10 +159,13 @@ impl S3Src {
                 settings.url = Some(s3url);
                 Ok(())
             }
-            Err(_) => Err(glib::Error::new(
-                gst::URIError::BadUri,
-                "Could not parse URI",
-            )),
+            Err(err) => {
+                gst::error!(CAT, "{}", err);
+                Err(glib::Error::new(
+                    gst::URIError::BadUri,
+                    "Could not parse URI",
+                ))
+            }
         }
     }
 
@@ -321,7 +324,9 @@ impl ObjectImpl for S3Src {
         match pspec.name() {
             "uri" => {
                 drop(settings);
-                let _ = self.set_uri(value.get().expect("type checked upstream"));
+                if let Err(err) = self.set_uri(value.get().expect("type checked upstream")) {
+                    gst::error!(CAT, "{}", err);
+                }
             }
             "access-key" => {
                 settings.access_key = value.get().expect("type checked upstream");
