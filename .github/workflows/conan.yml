name: Conan Create and Upload
on:
  repository_dispatch:
    types: [conan]
jobs:
  build:
    name: ${{ github.event.client_payload.profile }}>${{ github.event.client_payload.package }}
    runs-on: ${{ github.event.client_payload.tags }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.client_payload.ref }}
    - name: Install apt dependencies
      run: sudo apt install python3-setuptools
      if: ${{ runner.os == 'Linux' }}
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
      if: ${{ runner.os == 'Windows' }}
    - name: Install pip dependencies
      run: python3 -m pip install --upgrade pip conan
    - name: Conan Create
      uses: aivero/conan-action@test
      with:
        package: ${{ github.event.client_payload.package }}
        profile: ${{ github.event.client_payload.profile }}
        path: ${{ github.event.client_payload.path }}
        conan_repo: ${{ github.event.client_payload.conan_repo }}
      env:
        CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_LOGIN_USERNAME }}
        CONAN_LOGIN_PASSWORD: ${{ secrets.CONAN_LOGIN_PASSWORD }}
        CONAN_CONFIG_URL: ${{ secrets.CONAN_CONFIG_URL }}
        CONAN_CONFIG_DIR: ${{ secrets.CONAN_CONFIG_DIR }}
    - name: Get Conan Data Path
      if: ${{ always() }}
      run: echo ::set-env name=CONAN_DATA_PATH::$(~/.local/bin/conan config get storage.path)
    - uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: build-logs
        path: |
          - ${{ env.CONAN_DATA_PATH }}/*/*/_/_/build/*/meson-logs/*-log.txt
          - ${{ env.CONAN_DATA_PATH }}/*/*/_/_/build/*/*/config.log
          - ${{ env.CONAN_DATA_PATH }}/*/*/_/_/build/*/*/*/config.log
          - ${{ env.CONAN_DATA_PATH }}/*/*/_/_/build/*/CMakeFiles/CMake*.log
          - ${{ env.CONAN_DATA_PATH }}/*/*/_/_/build/*/*/*/cmake_bootstrap.log

