stages:
  - build
  - test
generate-config:
  image: $CICD_DOCKER_IMAGE
  tags: [saas-linux-large-amd64]
  stage: build
  rules:
    - if: '$PACKAGE_MANAGER_SET == null && $CI_PIPELINE_SOURCE != "merge_request_event" && $TRIAGE_BOT_SCHEDULED == null'
  variables:
    CICD_BRANCH: stable
    GIT_FETCH_EXTRA_FLAGS: --prune
    XDG_CACHE_HOME: $CI_PROJECT_DIR
  script:
    - 'CI_TARGET_BRANCH_NAME=$(curl -LsS -H "PRIVATE-TOKEN: $CICD_GITLAB_ACCESS_TOKEN" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/merge_requests?source_branch=$CI_COMMIT_REF_NAME" | jq --raw-output ".[0].target_branch") python3 scripts/create_aliases.py'
    - deno run --unstable --allow-all --import-map https://gitlab.com/aivero/open-source/cicd/-/raw/$CICD_BRANCH/import_map.json https://gitlab.com/aivero/open-source/cicd/-/raw/$CICD_BRANCH/lib/es6/src/GenerateConfig.js
  artifacts:
    paths:
      - generated-config.yml

child-pipeline:
  stage: test
  rules:
    - if: '$PACKAGE_MANAGER_SET == null && $CI_PIPELINE_SOURCE != "merge_request_event" && $TRIAGE_BOT_SCHEDULED == null'
  trigger:
    strategy: depend
    include:
      - artifact: generated-config.yml
        job: generate-config

include: '/.gitlab/dependabot-gitlab-ci.yml'

dry-run:triage:
  image: ruby
  stage: build
  script:
    - gem install gitlab-triage
    - gitlab-triage --help
    - gitlab-triage --dry-run --token $API_TOKEN --source groups --source-id aivero/open-source
  rules:
    - if: '$TRIAGE_BOT_SCHEDULED != null && $CI_PIPELINE_SOURCE != "schedule"'
      when: manual

policy:run:
  image: ruby
  stage: build
  script:
    - gem install gitlab-triage
    - gitlab-triage --token $API_TOKEN --source groups --source-id aivero/open-source
  rules:
    - if: '$TRIAGE_BOT_SCHEDULED != null && $CI_PIPELINE_SOURCE != "schedule"'
      when: manual

schedule:policyrun:
  image: ruby
  stage: build
  script:
    - gem install gitlab-triage
    - gitlab-triage --token $API_TOKEN --source groups --source-id aivero/open-source
  only:
    - schedules
