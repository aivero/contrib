#!/usr/bin/env bash

# Use alpine packages
if [ "$1" == "-a" ]; then
    alpine=1
    shift
fi

# Print devops.yml argument
if [ "$1" == "-c" ]; then
    print_config=1
    shift
fi

if [[ -z "$1" ]] ; then
    echo "No argument supplied!"
    echo "Usage: generate-recipe [-a] [-c] PKG-NAME"
    echo " -a: generate from Alpine"
    echo " -c: generate devops.yml"
    exit 1
fi

# Handle + in package name
pkg="${1//+/%2B}"

# Load package
if [ -n "$alpine" ]; then
  wget https://git.alpinelinux.org/aports/plain/main/$pkg/APKBUILD -qO /tmp/$pkg.PKG
  if [[ $? -ne 0 ]]; then
    wget https://git.alpinelinux.org/aports/plain/community/$pkg/APKBUILD -qO /tmp/$pkg.PKG
  fi
  source /tmp/$pkg.PKG
else
  wget https://raw.githubusercontent.com/archlinux/svntogit-packages/packages/$pkg/trunk/PKGBUILD -qO /tmp/$pkg.PKG
  if [[ $? -ne 0 ]]; then
    wget https://raw.githubusercontent.com/archlinux/svntogit-community/packages/$pkg/trunk/PKGBUILD -qO /tmp/$pkg.PKG
  fi
  if [[ $? -ne 0 ]]; then
    wget https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=$pkg -qO /tmp/$pkg.PKG
  fi
  source /tmp/$pkg.PKG
fi

# Print config.yml
if [[ $print_config -eq 1 ]]; then
  echo -e "- version: '$pkgver'"
  exit 0
fi

# Gather package name
if [ -n "$pkgbase" ]; then
    pkgname=$pkgbase
fi
pkgname_camel=$(echo "$pkgname" | awk -F"-" '{for(i=1;i<=NF;i++){$i=toupper(substr($i,1,1)) substr($i,2)}} 1' OFS="")

# Gather build system commands
build=$(declare -f build | sed -e '1,2d;$ d;s/^[ \t]*//')
case "$build" in
  *cmake*)
    build_system="cmake"
    ;;
  *meson*)
    build_system="meson"
    ;;
  *cargo*)
    build_system="cargo"
    ;;
  *setup.py*)
    build_system="setuptools"
    ;;
  *npm*)
    build_system="npm"
    ;;
  *configure*)
    build_system="autotools"
    ;;
  *)
    build_system="make"
    ;;
esac

# Handle npm packages without build function
package=$(declare -f package | sed -e '1,2d;$ d;s/^[ \t]*//')
case "$package" in
  *npm*)
    if [ "$build_system" == "make" ]; then
      build_system="npm"
    fi
    ;;
esac

# Output Conan recipe
echo -e "from build import *"
echo -e ""
echo -e ""
echo -e "class ${pkgname_camel}(Recipe):"
echo -e "    description = \"$pkgdesc\""
echo -e "    license = \"$license\""

if [[ ${#depends[@]} -ne 0 ]]; then
  echo -e "    build_requires = ("
  case "$build_system" in
    autotools|make)
      echo -e "        \"cc/[^1.0.0]\","
      echo -e "        \"autotools/[^1.0.0]\","
      ;;
    cmake|meson)
      echo -e "        \"cc/[^1.0.0]\","
      ;;
  esac

  if [ -n "$alpine" ]; then
    for dep in $makedepends
    do
      # Don't use dev packages
      dep=${dep/%-dev/}

      wget https://git.alpinelinux.org/aports/plain/main/$dep/APKBUILD -qO /tmp/$dep.PKG
      if [[ $? -ne 0 ]]; then
        wget https://git.alpinelinux.org/aports/plain/community/$dep/APKBUILD -qO /tmp/$dep.PKG
      fi
      depver=$(grep pkgver= /tmp/$dep.PKG | cut -b 8-)
    	echo -e "        \"$dep/[^$depver]\","
    done
  else
    for dep in "${makedepends[@]}"
    do
      wget https://raw.githubusercontent.com/archlinux/svntogit-packages/packages/$dep/trunk/PKGBUILD -qO /tmp/$dep.PKG
      if [[ $? -ne 0 ]]; then
        wget https://raw.githubusercontent.com/archlinux/svntogit-community/packages/$dep/trunk/PKGBUILD -qO /tmp/$dep.PKG
      fi
      depver=$(grep pkgver= /tmp/$dep.PKG | cut -b 8-)
    	echo -e "        \"$dep/[^$depver]\","
    done
  fi
  echo -e "    )"
fi

echo -e "    requires = ("

if [ -n "$alpine" ]; then
  for dep in $depends
  do
    # Don't use dev packages
    dep=${dep/%-dev/}

    wget https://git.alpinelinux.org/aports/plain/main/$dep/APKBUILD -qO /tmp/$dep.PKG
    if [[ $? -ne 0 ]]; then
      wget https://git.alpinelinux.org/aports/plain/community/$dep/APKBUILD -qO /tmp/$dep.PKG
    fi
    depver=$(grep pkgver= /tmp/$dep.PKG | cut -b 8-)
  	echo -e "        \"$dep/[^$depver]\","
  done
else
  for dep in "${depends[@]}"
  do
    wget https://raw.githubusercontent.com/archlinux/svntogit-packages/packages/$dep/trunk/PKGBUILD -qO /tmp/$dep.PKG
    if [[ $? -ne 0 ]]; then
      wget https://raw.githubusercontent.com/archlinux/svntogit-community/packages/$dep/trunk/PKGBUILD -qO /tmp/$dep.PKG
    fi
    depver=$(grep pkgver= /tmp/$dep.PKG | cut -b 8-)
  	echo -e "        \"$dep/[^$depver]\","
  done
fi
echo -e "    )"

download=$(echo "${source[0]}" | sed "s/$pkgver/{self.version}/g")
echo -e ""
echo -e "    def source(self):"

case "$build_system" in
  npm)
    echo -e "        tools.download(f\"$download\", f\"{self.name}-{self.version}.tgz\")"
    ;;
  *)
    echo -e "        self.get(f\"$download\")"
    ;;
esac

echo -e ""
echo -e "    def build(self):"
case "$build_system" in
  cmake)
    echo -e "        defs = {}"
    echo -e "        self.cmake(defs)"
    ;;
  meson)
    echo -e "        opts {}"
    echo -e "        self.meson(opts)"
    ;;
  cargo)
    echo -e "        self.cargo()"
    ;;
  setuptools)
    echo -e "        self.setuptools()"
    ;;
  npm)
    echo -e "        self.npm()"
    ;;
  autotools)
    echo -e "        args = []"
    echo -e "        self.autotools(args)"
    ;;
  make)
    echo -e "        args = []"
    echo -e "        self.make(args)"
    ;;
esac
